from turtle import *


class Sprite(Turtle):
    def __init__(self, x, y, step=10, shape='circle', color='black'):
        super().__init__()
        self.penup()
        self.speed(0)
        self.goto(x,y)
        self.color(color)
        self.shape(shape)
        self.step = step

    def move_up(self):
        self.goto(self.xcor(), self.ycor() + self.step)
    def move_left(self):
        self.goto(self.xcor() - self.step, self.ycor())
    def move_right(self):
        self.goto(self.xcor() + self.step, self.ycor())
    def move_down(self):
        self.goto(self.xcor(), self.ycor() - self.step)
    
    def is_collide(self, sprite):
        dist = self.distance(sprite.xcor(), sprite.ycor())
        if dist < 30:
            return True
        else:
            return False
        
    def set_move(self, x_start, y_start, x_end, y_end):
        self.x_start = x_start
        self.y_start = y_start
        self.x_end = x_end
        self.y_end = y_end
        self.goto(x_start, y_start)
        self.setheading(self.towards(x_end, y_end))

    def make_step(self):
        self.forward(self.step)
        if self.distance(self.x_end, self.y_end) < self.step:
            self.set_move(self.x_end, self.y_end, self.x_start, self.y_start)
        

player = Sprite(0,-100,10,'circle','light blue')
vrag1 = Sprite(-200,0,10,'square','light green')
vrag2 = Sprite(200,100,10,'square','light green')
zelb = Sprite(-3,150,10,'circle','red')
scr = player.getscreen()
scr.listen()

scr.onkey(player.move_up, 'Up')
scr.onkey(player.move_left, 'Left')
scr.onkey(player.move_right, 'Right')
scr.onkey(player.move_down, 'Down')

vrag1.set_move(-200, 0, 200, 0)
vrag2.set_move(200, 100, -200, 100)

total_casania = 0
while total_casania < 3:
    vrag1.make_step()
    vrag2.make_step()
    if player.is_collide(zelb):
        player.goto(0,-100)
        total_casania += 1        
    if player.is_collide(vrag1) or player.is_collide(vrag2):
       zelb.hideturtle()
       vrag1.hideturtle()
       vrag2.hideturtle()
       break
